name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test Job
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Analyze code
        run: flutter analyze
        
      - name: Run tests
        run: flutter test
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Build Android Job
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
          channel: 'stable'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

  # Build iOS Job
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build iOS
        run: flutter build ios --release --no-codesign
        
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/

  # Build artifacts for manual distribution
  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: app-release
          
      - name: Download iOS build
        uses: actions/download-artifact@v4
        with:
          name: ios-build
          
      - name: Create release summary
        run: |
          echo "## ðŸ“± Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Android APK**: Available for download" >> $GITHUB_STEP_SUMMARY
          echo "**iOS Build**: Available for manual distribution" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Download APK from artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. Share with testers manually" >> $GITHUB_STEP_SUMMARY
          echo "3. For iOS: Use Xcode to archive and distribute" >> $GITHUB_STEP_SUMMARY 